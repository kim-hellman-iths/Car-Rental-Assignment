@page "/"
@inject HttpClient Http
@inject Car_Rental.Business.Classes.Business b

<h3>Vehicles</h3>
<table>
    <tr>
        <th>Registration Number</th>
        <th>Make</th>
        <th>Type</th>
        <th>Odometer</th>
        <th>Cost/Km</th>
        <th>Cost/Day</th>
        <th>Availability</th>
    </tr>
    @foreach (var car in b.GetVehicles())
    {
        <tr>
            <td>@car.RegNr</td>
            <td>@Enum.GetName(typeof(VehicleMake), car.Make)</td>
            <td>@Enum.GetName(typeof(VehicleType), car.Type)</td>
            <td>@car.Odometer km</td>
            <td>$@car.CostKm</td>
            <td>$@car.CostDay</td>
            <td>
                <span class="booking-status @(car.Status == VehicleStatus.Booked ? "rented" : "")">
                    @Enum.GetName(typeof(VehicleStatus), car.Status)
                </span>
            </td>
        </tr>
    }
</table>

<h3>Bookings</h3>
<table>
    <tr>
        <th>Registration Number</th>
        <th>Customer</th>
        <th>Km rented</th>
        <th>Km returned</th>
        <th>Date rented</th>
        <th>Date returned</th>
        <th>Cost</th>
        <th>Status</th>
    </tr>
    @foreach (var booking in b.GetBookings())
    {
        var returned = (booking.DateReturned - booking.DateRented).Days >= 0;
        <tr>
            <td>@booking.Vehicle.RegNr</td>
            <td>@booking.Customer.FullName</td>
            <td>@booking.KmRented</td>
            <td>@booking.KmReturned</td>
            <td>@booking.DateRented.Date.ToShortDateString()</td>
            <td>@(returned ? booking.DateReturned.Date.ToShortDateString() : "")</td>
            <td>@(returned ? "$" + booking.GetCost() : "")</td>
            <td><span class="booking-status @(returned ? "" : "rented" )">@booking.Status</span></td>
        </tr>
    }
</table>
<h3>Customers</h3>
<table>
    <tr>
        <th>SSN</th>
        <th>Last name</th>
        <th>First name</th>
    </tr>
    @foreach (var customer in b.GetCustomers())
    {
        <tr>
            <td>@customer.Ssn</td>
            <td>@customer.LastName</td>
            <td>@customer.FirstName</td>
        </tr>
    }
</table>


@code {
    //Asynchronously gets vehicle data from a JSON file and set the new vehicles through the Business class
    protected override async Task OnInitializedAsync()
    {
        List<Car>? jsonVehicles = await Http.GetFromJsonAsync<List<Car>>("sample-data/vehicles.json");
        
        List<IVehicle> vehicles = new();
        
        if (jsonVehicles is not null)
        {
            foreach (var v in jsonVehicles)
            {
                IVehicle newVehicle = v;
                if (v.Type == VehicleType.Motorcycle) newVehicle = new Motorcycle(v);
                vehicles.Add(newVehicle);
            }
        }
        b.SetVehicles(vehicles);
    }
}